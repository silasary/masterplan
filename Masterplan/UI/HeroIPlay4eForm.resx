<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>